{"version":3,"sources":["App.js","index.js"],"names":["App","useState","band","setBand","title","setTitle","year","setYear","albums","setAlbums","username","currentUser","setCurrentUser","setUsername","password","setPassword","console","log","process","renderedAlbums","map","album","albumDetails","key","id","changeData","event","newValue","target","value","name","length","onSubmit","preventDefault","loginDetails","jsonLoginDetails","JSON","stringify","fetch","method","body","headers","then","response","json","data","onChange","newAlbum","jsonNewAlbum","root","document","querySelector","ReactDOM","render"],"mappings":"0LA6KeA,EA3KH,WACR,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAA4BN,mBAAS,IAArC,mBAAOO,EAAP,KAAeC,EAAf,KAGA,EAAsCR,mBAAS,CAAES,SAAU,KAA3D,mBAAOC,EAAP,KAAoBC,EAApB,KAEA,EAAgCX,mBAAS,IAAzC,mBAAOS,EAAP,KAAiBG,EAAjB,KACA,EAAgCZ,mBAAS,IAAzC,mBAAOa,EAAP,KAAiBC,EAAjB,KAEAC,QAAQC,IAAI,IAAKC,oHAKjB,IAAMC,EAAiBX,EAAOY,KAAI,SAAAC,GAC9B,IAAIC,EAAY,UAAMD,EAAMjB,MAAZ,eAAwBiB,EAAMnB,KAA9B,aAAuCmB,EAAMf,KAA7C,wBAAiEK,EAAYD,UAC7F,OAAO,wBAAIa,IAAKF,EAAMG,IAAKF,MAIzBG,EAAa,SAAAC,GACf,IAAIC,EAAWD,EAAME,OAAOC,MAE5B,OAAQH,EAAME,OAAOE,MACjB,IAAK,OACD3B,EAAQwB,GACR,MACJ,IAAK,QACDtB,EAASsB,GACT,MACJ,IAAK,OACDpB,EAAQoB,GACR,MACJ,IAAK,WACDd,EAAYc,GACZ,MACJ,IAAK,WACDZ,EAAYY,KA+ExB,OACI,6BACsC,IAAhChB,EAAYD,SAASqB,OACrB,6BACE,qDAEA,0BAAMC,SAnCM,SAAAN,GACpBA,EAAMO,iBAEN,IAAMC,EAAe,CACjBxB,SAAUA,EACVI,SAAUA,GAGRqB,EAAmBC,KAAKC,UAAUH,GAWxCI,MAAM,kDATW,CACbC,OAAQ,OACRC,KAAML,EACNM,QAAS,CACL,eAAgB,sBAMvBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF7B,QAAQC,IAAI4B,GACZjC,EAAeiC,GACfpC,EAAUoC,EAAKrC,aAYP,6BACI,2CACA,2BAAOsB,KAAK,WAAWgB,SAAUrB,EAAYI,MAAOnB,KAExD,6BACI,2CACA,2BAAOoB,KAAK,WAAWgB,SAAUrB,EAAYI,MAAOf,KAGxD,6CAIN,6BACE,+DAEA,0BAAMkB,SA9FC,SAAAN,GACfA,EAAMO,iBAGN,IAAMc,EAAW,CACbrC,SAAUC,EAAYD,SACtBR,KAAMA,EACNE,MAAOA,EACPE,KAAMA,GAIJ0C,EAAeZ,KAAKC,UAAUU,GAapCT,MAAM,sDAVW,CACbC,OAAQ,OACRC,KAAMQ,EACNP,QAAS,CACL,eAAgB,sBAOvBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACtBF,MAAK,SAAAG,GAGFpC,EAAUoC,GAEV1C,EAAQ,IACRE,EAAS,IACTE,EAAQ,IAERS,QAAQC,IAAI4B,QA2DR,6BACI,uCACA,2BAAOf,KAAK,OAAOgB,SAAUrB,EAAYI,MAAO3B,KAEpD,6BACI,wCACA,2BAAO4B,KAAK,QAAQgB,SAAUrB,EAAYI,MAAOzB,KAErD,6BACI,uCACA,2BAAO0B,KAAK,OAAOgB,SAAUrB,EAAYI,MAAOvB,KAEpD,iDAGJ,6BACI,+CAEA,4BACKa,OChKnB8B,EAAOC,SAASC,cAAc,SAEpCC,IAASC,OAAO,kBAAC,EAAD,MAASJ,K","file":"static/js/main.b2a5470d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst App = () => {\n    const [band, setBand] = useState(\"\");\n    const [title, setTitle] = useState(\"\");\n    const [year, setYear] = useState(\"\");\n    const [albums, setAlbums] = useState([]);\n    // Note: currentUser is an object with \"username\" property\n    // Later we may add extra properties!\n    const [currentUser, setCurrentUser] = useState({ username: \"\" })\n    // Use these state variables to control the value of the login inputs\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    console.log(\"!\", process.env);\n\n    // Every time we update the \"albums\" state variable we will automatically re-render the app...\n    // When this happens, map the new version of \"albums\"...\n    // ... and create a new list item for every album, which we can render in the <ul> in our JSX\n    const renderedAlbums = albums.map(album => {\n        let albumDetails = `${album.title} by ${album.band} (${album.year}) - added by ${currentUser.username}`;\n        return <li key={album.id}>{albumDetails}</li>\n    })\n\n    // Function to change the state variable corresponding to a form input the user tried to change\n    const changeData = event => {\n        let newValue = event.target.value;\n\n        switch (event.target.name) {\n            case \"band\":\n                setBand(newValue);\n                break;\n            case \"title\":\n                setTitle(newValue);\n                break;\n            case \"year\":\n                setYear(newValue);\n                break;\n            case \"username\":\n                setUsername(newValue);\n                break;\n            case \"password\":\n                setPassword(newValue);\n                break;\n            default:\n                break;\n        }\n    }\n\n    // Function to submit the form to our server using a POST request\n    const submitForm = event => {\n        event.preventDefault();\n\n        // Create new album object\n        const newAlbum = {\n            username: currentUser.username,\n            band: band,\n            title: title,\n            year: year\n        }\n\n        // \"Translate\" the object into a JSON string\n        const jsonNewAlbum = JSON.stringify(newAlbum);\n\n        // Set up the post request we will shortly make\n        const settings = {\n            method: \"POST\",\n            body: jsonNewAlbum,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }\n\n        // Make a post request to our server, including the new data in req.body\n        // fetch(`${process.env.API_URL}/new-album`, settings)\n        fetch(`https://peaceful-peak-92131.herokuapp.com/new-album`, settings)    \n        .then(response => response.json())\n            .then(data => {\n                // When we have received our response from the server, and \"translated\" it back to standard JS\n                // Update the \"albums\" state variable\n                setAlbums(data);\n                // Reset the values of the inputs\n                setBand(\"\");\n                setTitle(\"\");\n                setYear(\"\");\n                // Log the array of albums we received back from the server\n                console.log(data);\n                //alert(\"Success! You can now submit another album\");\n            })\n    }\n\n    // Handle submitting login details\n    const submitLoginData = event => {\n        event.preventDefault();\n\n        const loginDetails = {\n            username: username,\n            password: password\n        }\n\n        const jsonLoginDetails = JSON.stringify(loginDetails);\n\n        const settings = {\n            method: \"POST\",\n            body: jsonLoginDetails,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }\n\n        // fetch(`${process.env.API_URL}/login`, settings)\n        fetch(`https://peaceful-peak-92131.herokuapp.com/login`, settings)\n        .then(response => response.json())\n        .then(data => {\n            console.log(data);\n            setCurrentUser(data)  // object with \"username\" property\n            setAlbums(data.albums) \n        })\n    }\n\n    // Conditional rendering\n    return (\n        <div>\n            { currentUser.username.length === 0 \n            ? <div>\n                <h1>Login to Add an Album</h1>\n\n                <form onSubmit={submitLoginData}>\n                    <div>\n                        <label>Username</label>\n                        <input name=\"username\" onChange={changeData} value={username} />\n                    </div>\n                    <div>\n                        <label>Password</label>\n                        <input name=\"password\" onChange={changeData} value={password} />\n                    </div>\n\n                    <button>Sign In</button>\n                </form>\n            </div>\n            \n            : <div>\n                <h1>Add an Album to the Collection!</h1>\n\n                <form onSubmit={submitForm}>\n                    <div>\n                        <label>Band</label>\n                        <input name=\"band\" onChange={changeData} value={band} />\n                    </div>\n                    <div>\n                        <label>Title</label>\n                        <input name=\"title\" onChange={changeData} value={title} />\n                    </div>\n                    <div>\n                        <label>Year</label>\n                        <input name=\"year\" onChange={changeData} value={year} />\n                    </div>\n                    <button>Submit Album</button>\n                </form>\n\n                <div>\n                    <h2>Current Albums:</h2>\n\n                    <ul>\n                        {renderedAlbums}\n                    </ul>\n                </div>\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst root = document.querySelector(\"#root\");\n\nReactDOM.render(<App />, root);"],"sourceRoot":""}